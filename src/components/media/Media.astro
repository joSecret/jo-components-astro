---
/**
 * Media Component
 *
 * @description A responsive media component with support for various aspect ratios and loading strategies
 */
interface Props {
  /**
   * Additional classes to apply to the media wrapper
   */
  class?: string
  /**
   * Source URL for the media
   * @default "https://fakeimg.pl/640x360"
   */
  src?: string
  /**
   * Alt text for the media
   * @default ""
   */
  alt?: string
  /**
   * Aspect ratio of the media
   * @default "auto"
   */
  ratio?: '1:1' | '4:3' | '16:9' | '21:9' | 'auto'
  /**
   * Loading strategy
   * @default "lazy"
   */
  loading?: 'lazy' | 'eager'
  /**
   * Decoding strategy
   * @default "async"
   */
  decoding?: 'async' | 'sync' | 'auto'
  /**
   * Fetch priority
   * @default "auto"
   */
  fetchpriority?: 'high' | 'low' | 'auto'
  /**
   * HTML attributes to spread on the media wrapper
   */
  [key: string]: string | number | boolean | undefined
}

const {
  class: className,
  src = 'https://fakeimg.pl/640x360',
  alt = '',
  ratio = 'auto',
  loading = 'lazy',
  decoding = 'async',
  fetchpriority = 'auto',
  ...rest
} = Astro.props

const aspectRatios = {
  '1:1': '1',
  '4:3': '4/3',
  '16:9': '16/9',
  '21:9': '21/9',
  auto: 'auto',
}
---

<div class:list={['media-wrapper', className]} data-ratio={ratio} {...rest}>
  <img
    src={src}
    alt={alt}
    loading={loading}
    decoding={decoding}
    fetchpriority={fetchpriority}
    style={ratio !== 'auto' ? `aspect-ratio: ${aspectRatios[ratio]};` : ''}
  />
</div>

<style>
  :where(.media-wrapper) {
    position: relative;
    border-radius: 0.5rem;
    inline-size: 100%;
    overflow: hidden;
  }

  :where(img) {
    border-radius: inherit;
    inline-size: 100%;
    block-size: auto;
    object-fit: cover;
  }
</style>
